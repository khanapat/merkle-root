// pnpm add --save-dev @openzeppelin/merkle-tree

import { StandardMerkleTree } from "@openzeppelin/merkle-tree";
import { parseEther } from "viem";

// https://github.com/OpenZeppelin/merkle-tree
async function main() {
    const values = [
        ["0x70997970c51812dc3a010c7d01b50e0d17dc79c8", parseEther("1").toString()],
        ["0x3c44cdddb6a900fa2b585dd299e03d12fa4293bc", parseEther("2").toString()],
        ["0x90f79bf6eb2c4f870365e785982e1f101e93b906", parseEther("3").toString()],
        ["0x15d34aaf54267db7d7c367839aaf71a00a2c6a65", parseEther("4").toString()],
        // ["0x9965507d1a55bcc2695c58ba16fb37d819b0a4dc", parseEther("5").toString()],
        // ["0x976ea74026e726554db657fa54763abd0c3a0aa9", parseEther("6").toString()],
    ];

    // leaf is double-hashed
    // leaf generated by encode abi parameters
    // https://github.com/OpenZeppelin/merkle-tree/blob/master/src/hashes.ts#L8
    // https://github.com/OpenZeppelin/merkle-tree/issues/13#issuecomment-1407797512
    const tree = StandardMerkleTree.of(values, ["address", "uint256"]);

    console.log(tree.root);
    console.log(JSON.stringify(tree.dump()));

    for (const [i, v] of tree.entries()) {
        console.log(i, v);
        console.log(tree.getProof(i));
    }
}

main().catch((error) => {
    console.error(error);
    process.exitCode = 1;
});